import React, { useState } from "react";
import { useUser } from "../hooks/useUser";
import { useApi } from "../api/api";
import { useNavigate } from "react-router-dom";
import DropdownSelect from "../components/DropdownSelect";
import "./CreateAdForm.css";

const CreateAdForm: React.FC = () => {
    const { username } = useUser();
    const { post } = useApi();
    const navigate = useNavigate();

    const [form, setForm] = useState({
        title: "",
        description: "",
        animal_id: "",
        breed_id: "",
        price: 0,
        contacts: "",
    });
    const [photo, setPhoto] = useState<File | null>(null);
    const [error, setError] = useState<string | null>(null);

    const handleSubmit = async (e: React.FormEvent) => {
        e.preventDefault();
        if (!username || !photo) {
            setError("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!");
            return;
        }

        const formData = new FormData();
        formData.append("form", JSON.stringify(form));
        formData.append("photo", photo);

        try {
            const response = await post(`/ads/create`, formData);
            // @ts-ignore
            const adID = response.data.ad.info.id;
            navigate(`/ads/${adID}`);
        } catch (err) {
            setError("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è.");
        }
    };

    return (
        <div className="ad-form-container">
            <h2 className="ad-form-title">–°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ</h2>
            {error && <p className="ad-form-error">{error}</p>}

            <form onSubmit={handleSubmit} className="ad-form">
                <label className="create-ad-form-label">–ù–∞–∑–≤–∞–Ω–∏–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è - –±—É–¥–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ</label>
                <input name="title" type="text" placeholder="–ó–∞–≥–æ–ª–æ–≤–æ–∫" className="ad-input" value={form.title}
                       onChange={(e) => setForm({...form, title: e.target.value})} required/>

                <label className="create-ad-form-label">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø–∏—Ç–æ–º—Ü–µ</label>
                <textarea name="description" placeholder="–û–ø–∏—Å–∞–Ω–∏–µ" className="ad-input ad-textarea"
                          value={form.description} onChange={(e) => setForm({...form, description: e.target.value})}
                          required/>

                <DropdownSelect
                    endpoint="/animals"
                    label="–í—ã–±–µ—Ä–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω–æ–µ"
                    onChange={(id) => setForm({...form, animal_id: id, breed_id: ""})}
                    initialState={null}
                />
                <DropdownSelect
                    endpoint="/breeds"
                    param={form.animal_id}
                    label="–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ—Ä–æ–¥—É –∂–∏–≤–æ—Ç–Ω–æ–≥–æ"
                    onChange={(id) => setForm({...form, breed_id: id})}
                    disabled={!form.animal_id}
                    initialState={null}
                />

                <label className="create-ad-form-label">–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É –≤ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö —Ä—É–±–ª—è—Ö, –ª–∏–±–æ –æ—Å—Ç–∞–≤—å—Ç–µ 0 (–æ—Ç–¥–∞—Ç—å –≤
                    –¥–æ–±—Ä—ã–µ —Ä—É–∫–∏ üòä)</label>
                <input name="price" type="number" placeholder="–¶–µ–Ω–∞" className="ad-input" value={form.price}
                       onChange={(e) => setForm({...form, price: parseInt(e.target.value)})} required/>
                <label className="create-ad-form-label">–£–∫–∞–∂–∏—Ç–µ, –∫–∞–∫ —Å –í–∞–º–∏ –º–æ–∂–Ω–æ —Å–≤—è–∑–∞—Ç—å—Å—è</label>
                <input name="contacts" type="text" placeholder="–ö–æ–Ω—Ç–∞–∫—Ç—ã" className="ad-input" value={form.contacts}
                       onChange={(e) => setForm({...form, contacts: e.target.value})} required/>
                <label className="create-ad-form-label">–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∂–∏–≤–æ—Ç–Ω–æ–≥–æ</label>
                <input type="file" accept="image/*" onChange={(e) => setPhoto(e.target.files?.[0] || null)}
                       className="ad-input" required/>

                <button type="submit" className="ad-submit-button">–°–æ–∑–¥–∞—Ç—å</button>
            </form>
        </div>
    );
};

export default CreateAdForm;
